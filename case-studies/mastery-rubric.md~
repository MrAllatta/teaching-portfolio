---
layout: page
title: "Making Mastery Work"
permalink: /impact/mastery/
---

## Case Study: Making Mastery Work

### Summary
How do you create a grading system that actually helps students grow—and keeps a diverse teaching team aligned across courses and years? This case study highlights a multi-year, department-wide effort to define a **shared set of mastery skills** for computer science and computational math classes in a CS-focused, unscreened public high school. The result was a vertically aligned, standards-connected framework of rubrics implemented in a schoolwide mastery platform, enabling students and teachers alike to focus on what matters: **problem-solving, abstraction, and iterative thinking.**

### The Challenge
- Align grading expectations across teachers and courses
- Keep the focus on skill development rather than compliance
- Ensure rubric language reflects both equity and academic rigor
- Support teachers in making consistent, transparent decisions
- Fit all of this within an evolving schoolwide platform (Jumpro.pe)

### My Role
As the CS Department Chair, I:
- Facilitated multi-year, cross-course collaboration to define vertically aligned CS mastery standards
- Developed common rubrics based on core computational practices and problem-solving processes
- Supported implementation across courses (Intro to CS, CSP, CSA, Comp Algebra, Capstone, Robotics, Tech)
- Built bridges to Common Core Math Practices where applicable
- Advocated for humane, non-punitive mastery implementation within a legacy grading system

### The Solution
We distilled our goals into five core domains:
1. **Use Tools** – selecting and applying known functions and contracts
2. **Read Programs** – predicting behavior and evaluating outputs
3. **Build Tools** – designing function headers or class outlines based on real-world problems
4. **Break Down Problems** – identifying computable subproblems and planning strategy
5. **Solve Large Problems** – applying prior knowledge to new, complex tasks

Each skill was scaffolded into a four-level rubric: **Novice, Apprentice, Practitioner, and Professional**, with language focused on thinking processes rather than task completion.

### The Impact
- Students and teachers developed a shared language for problem solving and growth
- Assessment became a tool for feedback and revision, not sorting or punishment
- Students transferred skills across courses because rubrics mirrored their thinking process
- Teachers used rubric language in conferences, IEPs, and interdisciplinary work
- System enabled clarity in tracking growth over time

> “It wasn’t just grading anymore—it was coaching.”

### Artifacts
- [Intro to CS Rubric →](#)
- [AP CS Principles Rubric →](#)
- [Computational Algebra Rubric →](#)
- [Vertical Skills Map →](#)

> This wasn’t just a standards alignment project. It was a culture shift.

---

Want to talk about how we built this, or how to do something like it at your school? [Contact me](/contact/).

